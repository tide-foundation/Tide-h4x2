@startuml H4x2_prism
title Tide PRISM authentication
!include https://raw.githubusercontent.com/bschwarz/puml-themes/master/themes/aws-orange-light/puml-theme-aws-orange-light.puml

actor "User" as usr
participant "Vendor" as vendor
collections "ORKs" as ork
database "Simulator" as sim

group Precondition
note over usr
    username
    password
    secretCode
end note 

note over ork
    ORKPriv
    ORKPub = G * ORKPriv
end note

note over sim
    ORK Public
    ORK URL
end note
end

usr -> vendor: GET Vendor Login Page
vendor -> usr: Redirect to ORK enclave (specifcally Tide ORK for now)

note over usr
a = Point(password)
userID = hash(username)
r = random()
endnote

usr -> ork: a * r, userID
activate usr

note over ork
Prism = random()
EncryptedState = Encrypt(Prism | userID, ORKPriv)
endnote
ork -> usr: a * r * Prism, EncryptedState, ORKPub

note over usr
keyPoint = (a * r * Prism) * r^-1  (remove r)
PrismPub = G * hash(keyPoint)
PrismAuth = hash(ORKPub * PrismPub)
endnote

usr -> ork: PrismPub, EncryptedState
note over ork
Prism, userID = Decrypt(EncryptedState)
end note

ork -> sim: Check userID does not exist
note over ork
CVK = random()
PrismAuth = hash( ORKPriv * PrismPub )
EncryptedCVK = Encrypt(CVK, PrismAuth)
Store(PrismAuth, userID, Prism)
endnote

ork -> usr: EncryptedCVK

note over usr
CVK = Decrypt(EncryptedCVK, PrismAuth)
EncryptedCode = Encrypt(SecretCode, CVK)
end note

usr -> vendor: EncryptedCode, userID
vendor -> ork: Check user exists

note over vendor
Store(EncryptedCode, userID)
end note
deactivate usr

@enduml